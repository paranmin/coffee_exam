-- 커피전문점
DROP SCHEMA IF EXISTS coffee_project;

-- 커피전문점
CREATE SCHEMA coffee_project;

CREATE TABLE `product` (
  `code` varchar(4) NOT NULL COMMENT '제품코드',
  `prdname` varchar(10) NOT NULL COMMENT '제품명',
  PRIMARY KEY (`code`)
) CHARSET=utf8 COMMENT='제품코드표';


CREATE TABLE `sales` (
  `code` varchar(4) NOT NULL COMMENT '제품코드',
  `unit_cost` int(11) DEFAULT NULL COMMENT '제품단가',
  `quantity` int(11) DEFAULT NULL COMMENT '판매수량',
  `per_margin` int(11) DEFAULT NULL COMMENT '마진율',
  PRIMARY KEY (`code`),
  CONSTRAINT `FK_product_TO_sales` FOREIGN KEY (`code`) REFERENCES `product` (`code`)
) CHARSET=utf8 COMMENT='제품판매';


DROP PROCEDURE IF EXISTS proc_rank_margin;
DELIMITER $$
$$		
CREATE PROCEDURE proc_rank_margin()
BEGIN
	set @sup := 0, @tax := 0, @sell := 0, @marp := 0;
	select p.code, p.prdname, s.unit_cost, s.quantity, 
		(@sell := (s.unit_cost*s.quantity)) as sellprice, 
		(@tax := ceil(@sell / 11)) as tax,
		(@sup := @sell - @tax) as suprice,
		per_margin,
		(@marp := round(@sup * (s.per_margin/100))) as marprice 
	from product p join sales s on s.code = p.code
	order by marprice DESC;
END


DROP PROCEDURE IF EXISTS proc_rank_sell ;
DELIMITER $$
$$
CREATE PROCEDURE proc_rank_sell()
BEGIN
	set @sup := 0, @tax := 0, @sell := 0, @marp := 0;
	select p.code, p.prdname, s.unit_cost, s.quantity, 
		(@sell := (s.unit_cost*s.quantity)) as sellprice, 
		(@tax := ceil(@sell / 11)) as tax,
		(@sup := @sell - @tax) as suprice,
		per_margin,
		(@marp := round(@sup * (s.per_margin/100))) as marprice 
	from product p join sales s on s.code = p.code
	order by sellprice DESC;
END  $$
DELIMITER ;